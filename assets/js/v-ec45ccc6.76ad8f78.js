"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[2221],{8293:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-ec45ccc6",path:"/kernel/time/timer.html",title:"(Hardware) Timer",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Interrupt handler",slug:"interrupt-handler",children:[]}],filePathRelative:"kernel/time/timer.md",git:{updatedTime:1627640859e3,contributors:[{name:"Zhang Junyu",email:"zhangjunyu.92@bytedance.com",commits:2}]}}},1993:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="hardware-timer" tabindex="-1"><a class="header-anchor" href="#hardware-timer" aria-hidden="true">#</a> (Hardware) Timer</h1><h2 id="interrupt-handler" tabindex="-1"><a class="header-anchor" href="#interrupt-handler" aria-hidden="true">#</a> Interrupt handler</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code><span class="token comment">/*\n * Setup the device for a periodic tick\n */</span>\n<span class="token keyword">void</span> <span class="token function">tick_setup_periodic</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">clock_event_device</span> <span class="token operator">*</span>dev<span class="token punctuation">,</span> <span class="token keyword">int</span> broadcast<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n        <span class="token function">tick_set_periodic_handler</span><span class="token punctuation">(</span>dev<span class="token punctuation">,</span> broadcast<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token comment">/* Broadcast setup ? */</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">tick_device_is_functional</span><span class="token punctuation">(</span>dev<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token keyword">return</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>dev<span class="token operator">-&gt;</span>features <span class="token operator">&amp;</span> CLOCK_EVT_FEAT_PERIODIC<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>\n            <span class="token operator">!</span><span class="token function">tick_broadcast_oneshot_active</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token function">clockevents_switch_state</span><span class="token punctuation">(</span>dev<span class="token punctuation">,</span> CLOCK_EVT_STATE_PERIODIC<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n                <span class="token keyword">unsigned</span> <span class="token keyword">int</span> seq<span class="token punctuation">;</span>\n                <span class="token class-name">ktime_t</span> next<span class="token punctuation">;</span>\n\n                <span class="token keyword">do</span> <span class="token punctuation">{</span>\n                        seq <span class="token operator">=</span> <span class="token function">read_seqbegin</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>jiffies_lock<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                        next <span class="token operator">=</span> tick_next_period<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">read_seqretry</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>jiffies_lock<span class="token punctuation">,</span> seq<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token function">clockevents_switch_state</span><span class="token punctuation">(</span>dev<span class="token punctuation">,</span> CLOCK_EVT_STATE_ONESHOT<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">clockevents_program_event</span><span class="token punctuation">(</span>dev<span class="token punctuation">,</span> next<span class="token punctuation">,</span> false<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                                <span class="token keyword">return</span><span class="token punctuation">;</span>\n                        next <span class="token operator">=</span> <span class="token function">ktime_add</span><span class="token punctuation">(</span>next<span class="token punctuation">,</span> tick_period<span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>',3),t={render:function(n,s){return p}}}}]);