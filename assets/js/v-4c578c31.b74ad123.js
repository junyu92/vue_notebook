"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[5551],{4740:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-4c578c31",path:"/kernel/driver/pci.html",title:"PCI",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Architecture",slug:"architecture",children:[{level:3,title:"Host Bridge",slug:"host-bridge",children:[]},{level:3,title:"PCI Bus",slug:"pci-bus",children:[]},{level:3,title:"PCI Device",slug:"pci-device",children:[]}]},{level:2,title:"Type 0 PCI Configuration Space (Non-bridge)",slug:"type-0-pci-configuration-space-non-bridge",children:[{level:3,title:"Standardized registers",slug:"standardized-registers",children:[]}]},{level:2,title:"Type 1 PCI Configuration Space",slug:"type-1-pci-configuration-space",children:[]},{level:2,title:"MSI and MSI-X",slug:"msi-and-msi-x",children:[{level:3,title:"MSI capability",slug:"msi-capability",children:[]},{level:3,title:"MSI-X Table",slug:"msi-x-table",children:[]},{level:3,title:"MSI-X capability",slug:"msi-x-capability",children:[]}]},{level:2,title:"Linux",slug:"linux",children:[{level:3,title:"PCI Bus",slug:"pci-bus-1",children:[]},{level:3,title:"msi_desc",slug:"msi-desc",children:[]},{level:3,title:"PCI Device",slug:"pci-device-1",children:[]}]},{level:2,title:"PCI Structure from QEMU view",slug:"pci-structure-from-qemu-view",children:[]},{level:2,title:"MSI",slug:"msi",children:[{level:3,title:"Introduction",slug:"introduction",children:[]},{level:3,title:"MSI and MSIX",slug:"msi-and-msix",children:[]},{level:3,title:"How to use MSIs",slug:"how-to-use-msis",children:[]},{level:3,title:"Implementation",slug:"implementation",children:[]}]},{level:2,title:"Reference",slug:"reference",children:[]}],filePathRelative:"kernel/driver/pci.md",git:{updatedTime:1624808408e3,contributors:[{name:"Zhang Junyu",email:"zhangjunyu.92@bytedance.com",commits:2},{name:"Zhang Junyu",email:"junyu92@163.com",commits:1}]}}},6497:(n,s,a)=>{a.r(s),a.d(s,{default:()=>Bs});var e=a(6252),t=a(4444);const o=(0,e._)("h1",{id:"pci",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#pci","aria-hidden":"true"},"#"),(0,e.Uk)(" PCI")],-1),c={class:"table-of-contents"},l=(0,e.Uk)("Architecture"),r=(0,e.Uk)("Host Bridge"),_=(0,e.Uk)("PCI Bus"),p=(0,e.Uk)("PCI Device"),i=(0,e.Uk)("Type 0 PCI Configuration Space (Non-bridge)"),k=(0,e.Uk)("Standardized registers"),u=(0,e.Uk)("Type 1 PCI Configuration Space"),b=(0,e.Uk)("MSI and MSI-X"),m=(0,e.Uk)("MSI capability"),d=(0,e.Uk)("MSI-X Table"),U=(0,e.Uk)("MSI-X capability"),f=(0,e.Uk)("Linux"),y=(0,e.Uk)("PCI Bus"),h=(0,e.Uk)("msi_desc"),v=(0,e.Uk)("PCI Device"),w=(0,e.Uk)("PCI Structure from QEMU view"),g=(0,e.Uk)("MSI"),I=(0,e.Uk)("Introduction"),x=(0,e.Uk)("MSI and MSIX"),M=(0,e.Uk)("How to use MSIs"),S=(0,e.Uk)("Implementation"),C=(0,e.Uk)("Reference"),P=(0,e._)("h2",{id:"architecture",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#architecture","aria-hidden":"true"},"#"),(0,e.Uk)(" Architecture")],-1),q=(0,e._)("h3",{id:"host-bridge",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#host-bridge","aria-hidden":"true"},"#"),(0,e.Uk)(" Host Bridge")],-1),A=(0,e._)("h3",{id:"pci-bus",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#pci-bus","aria-hidden":"true"},"#"),(0,e.Uk)(" PCI Bus")],-1),E=(0,e._)("h3",{id:"pci-device",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#pci-device","aria-hidden":"true"},"#"),(0,e.Uk)(" PCI Device")],-1),R=(0,e._)("h2",{id:"type-0-pci-configuration-space-non-bridge",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#type-0-pci-configuration-space-non-bridge","aria-hidden":"true"},"#"),(0,e.Uk)(" Type 0 PCI Configuration Space (Non-bridge)")],-1),N=(0,e._)("p",null,[(0,e.Uk)("PCI configuration space is the underlying way that the "),(0,e._)("em",null,"Conventional PCI"),(0,e.Uk)(", "),(0,e._)("em",null,"PCI-X"),(0,e.Uk)(" and "),(0,e._)("em",null,"PCI Express"),(0,e.Uk)(" perform auto configuration of cards into their bus.")],-1),T=(0,e._)("h3",{id:"standardized-registers",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#standardized-registers","aria-hidden":"true"},"#"),(0,e.Uk)(" Standardized registers")],-1),D=(0,e._)("p",null,[(0,e._)("img",{src:t,alt:"PCI Standardized registers"})],-1),B=(0,e._)("h4",{id:"vendor-id-and-device-id",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#vendor-id-and-device-id","aria-hidden":"true"},"#"),(0,e.Uk)(" Vendor ID and Device ID")],-1),L=(0,e._)("p",null,"identify the device.",-1),O=(0,e._)("p",null,[(0,e.Uk)("The 16-bit vendor ID is allocated by the "),(0,e._)("em",null,"PCI-SIG"),(0,e.Uk)(". The 16-bit device ID is then assigned by the vendor.")],-1),X=(0,e._)("blockquote",null,[(0,e._)("p",null,"https://pcisig.com/membership/member-companies?combine=&order=field_vendor_id&sort=asc")],-1),V=(0,e._)("h4",{id:"revision-id",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#revision-id","aria-hidden":"true"},"#"),(0,e.Uk)(" Revision ID")],-1),z=(0,e._)("p",null,"the version number of the device",-1),W=(0,e._)("h4",{id:"status",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#status","aria-hidden":"true"},"#"),(0,e.Uk)(" Status")],-1),H=(0,e._)("p",null,"is used to report which features are supported and whether certain kinds of errors have occurred.",-1),F=(0,e._)("table",null,[(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"Bit"),(0,e._)("th",null,"Description")])]),(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,"Bit 15"),(0,e._)("td",null,"Detected Parity Error")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bit 14"),(0,e._)("td",null,"Signaled System Error")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bit 13"),(0,e._)("td",null,"Received Master Abort")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bit 12"),(0,e._)("td",null,"Received Target Abort")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bit 11"),(0,e._)("td",null,"Signaled Target Abort")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bits [10:9]"),(0,e._)("td",null,"DEVSEL Timing")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bit 8"),(0,e._)("td",null,"Master Data Parity Error")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bit 7"),(0,e._)("td",null,"Fast Back-to-Back Capable")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bit 6"),(0,e._)("td",null,"Reserved")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bit 5"),(0,e._)("td",null,"66 MHZ Capable")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bit 4"),(0,e._)("td",null,"Capabilities List")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bit 3"),(0,e._)("td",null,"Interrupt Status")]),(0,e._)("tr",null,[(0,e._)("td",null,"Bits [2:0]"),(0,e._)("td",null,"Reserved")])])],-1),G=(0,e._)("h4",{id:"command",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#command","aria-hidden":"true"},"#"),(0,e.Uk)(" Command")],-1),Q=(0,e._)("h4",{id:"class-code",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#class-code","aria-hidden":"true"},"#"),(0,e.Uk)(" Class Code")],-1),j=(0,e._)("p",null,"This identifies the type of device that this is. There are standard classes for every sort of device; video, scsi and so on. The class code for SCSI is 0x0100.",-1),Y=(0,e._)("table",null,[(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"Class"),(0,e._)("th",null,"Description")])]),(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,"0x00"),(0,e._)("td",null,"Devices built before class codes (i.e. pre PCI 2.0)")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x01"),(0,e._)("td",null,"Mass storage controller")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x02"),(0,e._)("td",null,"Network controller")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x03"),(0,e._)("td",null,"Display controller")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x04"),(0,e._)("td",null,"Multimedia device")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x05"),(0,e._)("td",null,"Memory Controller")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x06"),(0,e._)("td",null,"Bridge Device")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x07"),(0,e._)("td",null,"Simple communications controllers")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x08"),(0,e._)("td",null,"Base system peripherals")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x09"),(0,e._)("td",null,"Inupt devices")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x0A"),(0,e._)("td",null,"Docking Stations")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x0B"),(0,e._)("td",null,"Processorts")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x0C"),(0,e._)("td",null,"Serial bus controllers")]),(0,e._)("tr",null,[(0,e._)("td",null,"0x0D-0xFE"),(0,e._)("td",null,"Reserved")]),(0,e._)("tr",null,[(0,e._)("td",null,"0xFF"),(0,e._)("td",null,"Misc")])])],-1),Z=(0,e._)("h4",{id:"header-type",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#header-type","aria-hidden":"true"},"#"),(0,e.Uk)(" Header Type")],-1),J=(0,e._)("ul",null,[(0,e._)("li",null,"bit[7]: 1 represents multi-function device; 0 represents single-function device"),(0,e._)("li",null,"bits[6:0]: The Header Type register values determine the different layouts of remaining 48 bytes (64-16) of the header, depending on the function of the device. Type 0 for endpoints, Type for Root Complex, switches, and bridges.")],-1),K=(0,e._)("h4",{id:"cache-line-size",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#cache-line-size","aria-hidden":"true"},"#"),(0,e.Uk)(" Cache Line Size")],-1),$=(0,e._)("p",null,"The Cache Line Size register must be programmed before the device is told it can use the memory-write-and-invalidate transaction. This should normally match the CPU's cache line size, but the correct setting is system dependent. This register does not apply to PCI Express.",-1),nn=(0,e._)("h4",{id:"base-address-register-bar",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#base-address-register-bar","aria-hidden":"true"},"#"),(0,e.Uk)(" Base Address Register (BAR)")],-1),sn=(0,e._)("p",null,"It's used to",-1),an=(0,e._)("ul",null,[(0,e._)("li",null,"specify how much memory a device wants to be mapped into main memory"),(0,e._)("li",null,"after device enumeration, it holds the (base) addresses, where the mapped memory block begins")],-1),en=(0,e._)("h4",{id:"subsystem-id-and-subsystem-vendor-id",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#subsystem-id-and-subsystem-vendor-id","aria-hidden":"true"},"#"),(0,e.Uk)(" Subsystem ID and Subsystem Vendor ID")],-1),tn=(0,e._)("p",null,"While the Vendor ID is that of the chipset manufacturer, the Subsystem Vendor ID is that of the card manufacturer. The Subsystem ID is assigned by the subsystem vendor from the same number space as the Device ID.",-1),on=(0,e._)("h4",{id:"expansion-rom-base-address",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#expansion-rom-base-address","aria-hidden":"true"},"#"),(0,e.Uk)(" Expansion ROM Base Address")],-1),cn=(0,e._)("h4",{id:"cap-pointer",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#cap-pointer","aria-hidden":"true"},"#"),(0,e.Uk)(" Cap. Pointer")],-1),ln=(0,e._)("p",null,"points to a linked list of new capabilities implemented by the device.",-1),rn=(0,e._)("h4",{id:"interrupt-line-and-interrupt-pin",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#interrupt-line-and-interrupt-pin","aria-hidden":"true"},"#"),(0,e.Uk)(" Interrupt Line and Interrupt Pin")],-1),_n=(0,e._)("ul",null,[(0,e._)("li",null,"Interrupt Line: is used to pass an interrupt handle between the PCI initialisation code, the device's driver and Linux's interrupt handling subsystem. The number written there is meaningless to the the device driver but it allows the interrupt handler to correctly route an interrupt from the PCI device to the correct device driver's interrupt handling code within the Linux operating system."),(0,e._)("li",null,"Interrupt Pin: Specifies which interrupt pin the device uses. Where a value of 0x01 is INTA#, 0x02 is INTB#, 0x03 is INTC#, 0x04 is INTD#, and 0x00 means the device does not use an interrupt pin.")],-1),pn=(0,e._)("h2",{id:"type-1-pci-configuration-space",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#type-1-pci-configuration-space","aria-hidden":"true"},"#"),(0,e.Uk)(" Type 1 PCI Configuration Space")],-1),kn=(0,e._)("h2",{id:"msi-and-msi-x",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#msi-and-msi-x","aria-hidden":"true"},"#"),(0,e.Uk)(" MSI and MSI-X")],-1),un=(0,e._)("h3",{id:"msi-capability",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#msi-capability","aria-hidden":"true"},"#"),(0,e.Uk)(" MSI capability")],-1),bn=(0,e._)("p",null,"There are 4 kinds of MSI capabilities:",-1),mn=(0,e._)("ul",null,[(0,e._)("li",null,"32b Message Address"),(0,e._)("li",null,"64b Message Address"),(0,e._)("li",null,"32b Message Address and Per-vector Masking"),(0,e._)("li",null,"64b Message Address and Per-vector Masking")],-1),dn=(0,e._)("p",null,"Registers:",-1),Un=(0,e._)("h4",{id:"capability-id",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#capability-id","aria-hidden":"true"},"#"),(0,e.Uk)(" Capability ID")],-1),fn=(0,e._)("p",null,[(0,e.Uk)("should be "),(0,e._)("code",null,"0x05")],-1),yn=(0,e._)("h4",{id:"next-pointer",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#next-pointer","aria-hidden":"true"},"#"),(0,e.Uk)(" Next Pointer")],-1),hn=(0,e._)("p",null,"the address of next capability",-1),vn=(0,e._)("h4",{id:"message-control",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#message-control","aria-hidden":"true"},"#"),(0,e.Uk)(" Message Control")],-1),wn=(0,e._)("p",null,"Status",-1),gn=(0,e._)("table",null,[(0,e._)("thead",null,[(0,e._)("tr",null,[(0,e._)("th",null,"Bits"),(0,e._)("th",null,"Definition"),(0,e._)("th")])]),(0,e._)("tbody",null,[(0,e._)("tr",null,[(0,e._)("td",null,"15:9"),(0,e._)("td",null,"Reserved"),(0,e._)("td")]),(0,e._)("tr",null,[(0,e._)("td",null,"8"),(0,e._)("td",null,"Pre-vector Masking Capable"),(0,e._)("td")]),(0,e._)("tr",null,[(0,e._)("td",null,"7"),(0,e._)("td",null,"64 bit Address Capable"),(0,e._)("td")]),(0,e._)("tr",null,[(0,e._)("td",null,"6:4"),(0,e._)("td",null,"Multiple Message Enable"),(0,e._)("td",null,"interrupt count allocated by system")]),(0,e._)("tr",null,[(0,e._)("td",null,"3:1"),(0,e._)("td",null,"Multiple Message Capable"),(0,e._)("td",null,"max irq num the device can use")]),(0,e._)("tr",null,[(0,e._)("td",null,"0"),(0,e._)("td",null,"MSI Enable"),(0,e._)("td")])])],-1),In=(0,e._)("h4",{id:"message-upper-address",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#message-upper-address","aria-hidden":"true"},"#"),(0,e.Uk)(" Message (Upper) Address")],-1),xn=(0,e._)("p",null,"the destination address of the MSI memory write transaction",-1),Mn=(0,e._)("h4",{id:"mask-bits",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#mask-bits","aria-hidden":"true"},"#"),(0,e.Uk)(" Mask Bits")],-1),Sn=(0,e._)("h4",{id:"pending-bits",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#pending-bits","aria-hidden":"true"},"#"),(0,e.Uk)(" Pending Bits")],-1),Cn=(0,e._)("h3",{id:"msi-x-table",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#msi-x-table","aria-hidden":"true"},"#"),(0,e.Uk)(" MSI-X Table")],-1),Pn=(0,e._)("p",null,"MSI-X Table contains multiple entries. An entry represents a irq request.",-1),qn=(0,e._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,e._)("pre",{class:"language-text"},[(0,e._)("code",null,"+----------------+----------+----------------+----------+\n| Vector Control | Msg Data | Msg Upper Addr | Msg Addr | Entry 0\n| Vector Control | Msg Data | Msg Upper Addr | Msg Addr | Entry 1\n| Vector Control | Msg Data | Msg Upper Addr | Msg Addr | Entry 2\n| ...            | ...      | ...            | ...      | Entry 2\n| Vector Control | Msg Data | Msg Upper Addr | Msg Addr | Entry n-1\n+----------------+----------+----------------+----------+\n")]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br")])],-1),An=(0,e._)("h3",{id:"msi-x-capability",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#msi-x-capability","aria-hidden":"true"},"#"),(0,e.Uk)(" MSI-X capability")],-1),En=(0,e._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,e._)("pre",{class:"language-text"},[(0,e._)("code",null,"| 31                       | 15                        | 7     | 2 | 0 |\n| ------------------------ | ------------------------- | ----- | ----- |\n|       Message Control    |  Next Capability Pointer  | Capability ID |\n|                                Table Offset                  |  BIR  |\n|                                PBA Offset                    |  BIR  |\n")]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br")])],-1),Rn=(0,e._)("h4",{id:"msi-x-control-register",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#msi-x-control-register","aria-hidden":"true"},"#"),(0,e.Uk)(" MSI-X Control Register")],-1),Nn=(0,e._)("ul",null,[(0,e._)("li",null,"Bits[10:0]: MSI-X Table Size, Encoded as (Table Size - 1)"),(0,e._)("li",null,[(0,e.Uk)("Bit[14]: Function Mask. "),(0,e._)("ul",null,[(0,e._)("li",null,"1: All vectors associated with the function are masked"),(0,e._)("li",null,"0: Each vector's Mask bit determines whether the vector is masked or not")])]),(0,e._)("li",null,"Bit[15]: MSI-X Enable")],-1),Tn=(0,e._)("h4",{id:"table-offset-and-bir",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#table-offset-and-bir","aria-hidden":"true"},"#"),(0,e.Uk)(" Table Offset and BIR")],-1),Dn=(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Uk)("Bits[2:0]: Table BAR Indicator Register(BIR), indicates which BAR is used to map the MSI-X Table into memory space: "),(0,e._)("ul",null,[(0,e._)("li",null,"000: BAR0"),(0,e._)("li",null,"001: BAR1"),(0,e._)("li",null,"010: BAR2"),(0,e._)("li",null,"011: BAR3"),(0,e._)("li",null,"100: BAR4"),(0,e._)("li",null,"101: BAR5"),(0,e._)("li",null,"110: Reserved"),(0,e._)("li",null,"111: Reserved")])]),(0,e._)("li",null,"Bits[31:3]: Table Offset, which is the base address of the MSI-X Table, as an offset from the base address of the BAR indicated by the Table BIT bits")],-1),Bn=(0,e._)("p",null,[(0,e.Uk)("Linux returns the physical address of "),(0,e._)("strong",null,"MSI-X Table"),(0,e.Uk)(" and maps it to virtual address via method "),(0,e._)("code",null,"msix_map_region"),(0,e.Uk)(".")],-1),Ln=(0,e._)("h4",{id:"pba-offset-and-bir",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#pba-offset-and-bir","aria-hidden":"true"},"#"),(0,e.Uk)(" PBA Offset and BIR")],-1),On=(0,e._)("p",null,"the address of pending table",-1),Xn=(0,e._)("h2",{id:"linux",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#linux","aria-hidden":"true"},"#"),(0,e.Uk)(" Linux")],-1),Vn=(0,e._)("h3",{id:"pci-bus-1",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#pci-bus-1","aria-hidden":"true"},"#"),(0,e.Uk)(" PCI Bus")],-1),zn=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_bus"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"list_head"),(0,e.Uk)(" node"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("          "),(0,e._)("span",{class:"token comment"},"/* Node in list of buses */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_bus"),(0,e.Uk)("  "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("parent"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("        "),(0,e._)("span",{class:"token comment"},"/* Parent bus this bridge is on */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"list_head"),(0,e.Uk)(" children"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("      "),(0,e._)("span",{class:"token comment"},"/* List of child buses */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"list_head"),(0,e.Uk)(" devices"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* List of devices on this bus */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)("  "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("self"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("          "),(0,e._)("span",{class:"token comment"},"/* Bridge device as seen by parent */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"list_head"),(0,e.Uk)(" slots"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* List of slots on this bus;\n                                           protected by pci_slot_mutex */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"resource"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("resource"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("PCI_BRIDGE_RESOURCE_NUM"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"list_head"),(0,e.Uk)(" resources"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("     "),(0,e._)("span",{class:"token comment"},"/* Address space routed to this bus */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"resource"),(0,e.Uk)(" busn_res"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* Bus numbers routed to this bus */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_ops"),(0,e.Uk)("  "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("ops"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("           "),(0,e._)("span",{class:"token comment"},"/* Configuration access functions */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msi_controller"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("msi"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("     "),(0,e._)("span",{class:"token comment"},"/* MSI controller */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"void"),(0,e.Uk)("            "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("sysdata"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* Hook for sys-specific extension */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"proc_dir_entry"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("procdir"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* Directory entry in /proc/bus/pci */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"char"),(0,e.Uk)("   number"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* Bus number */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"char"),(0,e.Uk)("   primary"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("        "),(0,e._)("span",{class:"token comment"},"/* Number of primary bridge */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"char"),(0,e.Uk)("   max_bus_speed"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("  "),(0,e._)("span",{class:"token comment"},"/* enum pci_bus_speed */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"char"),(0,e.Uk)("   cur_bus_speed"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("  "),(0,e._)("span",{class:"token comment"},"/* enum pci_bus_speed */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"ifdef"),(0,e.Uk)(),(0,e._)("span",{class:"token expression"},"CONFIG_PCI_DOMAINS_GENERIC")]),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("             domain_nr"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"endif")]),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"char"),(0,e.Uk)("            name"),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token number"},"48"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"short"),(0,e.Uk)("  bridge_ctl"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("     "),(0,e._)("span",{class:"token comment"},"/* Manage NO_ISA/FBB/et al behaviors */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token class-name"},"pci_bus_flags_t"),(0,e.Uk)(" bus_flags"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("      "),(0,e._)("span",{class:"token comment"},"/* Inherited by child buses */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"device"),(0,e.Uk)("           "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("bridge"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"device"),(0,e.Uk)("           dev"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"bin_attribute"),(0,e.Uk)("    "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("legacy_io"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("     "),(0,e._)("span",{class:"token comment"},"/* Legacy I/O for this bus */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"bin_attribute"),(0,e.Uk)("    "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("legacy_mem"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("    "),(0,e._)("span",{class:"token comment"},"/* Legacy mem */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("            is_added"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"34"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"35"),(0,e._)("br")])],-1),Wn=(0,e._)("h3",{id:"msi-desc",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#msi-desc","aria-hidden":"true"},"#"),(0,e.Uk)(" msi_desc")],-1),Hn=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"/**\n * struct msi_desc - Descriptor structure for MSI based interrupts\n * @list:       List head for management\n * @irq:        The base interrupt number\n * @nvec_used:  The number of vectors used\n * @dev:        Pointer to the device which uses this descriptor\n * @msg:        The last set MSI message cached for reuse\n * @affinity:   Optional pointer to a cpu affinity mask for this descriptor\n *\n * @masked:     [PCI MSI/X] Mask bits\n * @is_msix:    [PCI MSI/X] True if MSI-X\n * @multiple:   [PCI MSI/X] log2 num of messages allocated\n * @multi_cap:  [PCI MSI/X] log2 num of messages supported\n * @maskbit:    [PCI MSI/X] Mask-Pending bit supported?\n * @is_64:      [PCI MSI/X] Address size: 0=32bit 1=64bit\n * @entry_nr:   [PCI MSI/X] Entry which is described by this descriptor\n * @default_irq:[PCI MSI/X] The default pre-assigned non-MSI irq\n * @mask_pos:   [PCI MSI]   Mask register position\n * @mask_base:  [PCI MSI-X] Mask register base address\n * @platform:   [platform]  Platform device specific msi descriptor data\n * @fsl_mc:     [fsl-mc]    FSL MC device specific msi descriptor data\n */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msi_desc"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token comment"},"/* Shared device/bus type independent data */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"list_head"),(0,e.Uk)("                list"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("                    irq"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("                    nvec_used"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"device"),(0,e.Uk)("                   "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msi_msg"),(0,e.Uk)("                  msg"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_affinity_desc"),(0,e.Uk)("        "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("affinity"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"union"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token comment"},"/* PCI MSI/X specific data */"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                        u32 masked"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                                __u8    is_msix         "),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                                __u8    multiple        "),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"3"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                                __u8    multi_cap       "),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"3"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                                __u8    maskbit         "),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                                __u8    is_64           "),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                                __u16   entry_nr"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                                "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(" default_irq"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(" msi_attrib"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"union"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                                u8      mask_pos"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                                "),(0,e._)("span",{class:"token keyword"},"void"),(0,e.Uk)(" __iomem "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("mask_base"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n                "),(0,e._)("span",{class:"token comment"},"/*\n                 * Non PCI variants add their data structure here. New\n                 * entries need to use a named structure. We want\n                 * proper name spaces for this. The PCI part is\n                 * anonymous for now as it would require an immediate\n                 * tree wide cleanup.\n                 */"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"platform_msi_desc"),(0,e.Uk)(" platform"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"fsl_mc_msi_desc"),(0,e.Uk)(" fsl_mc"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"34"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"35"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"36"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"37"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"38"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"39"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"40"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"41"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"42"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"43"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"44"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"45"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"46"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"47"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"48"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"49"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"50"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"51"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"52"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"53"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"54"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"55"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"56"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"57"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"58"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"59"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"60"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"61"),(0,e._)("br")])],-1),Fn=(0,e._)("h3",{id:"pci-device-1",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#pci-device-1","aria-hidden":"true"},"#"),(0,e.Uk)(" PCI Device")],-1),Gn=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"/* The pci_dev structure describes PCI devices */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"list_head"),(0,e.Uk)(" bus_list"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("      "),(0,e._)("span",{class:"token comment"},"/* Node in per-bus list */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_bus"),(0,e.Uk)("  "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("bus"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("           "),(0,e._)("span",{class:"token comment"},"/* Bus this device is on */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_bus"),(0,e.Uk)("  "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("subordinate"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("   "),(0,e._)("span",{class:"token comment"},"/* Bus this device bridges to */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"void"),(0,e.Uk)("            "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("sysdata"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* Hook for sys-specific extension */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"proc_dir_entry"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("procent"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* Device entry in /proc/bus/pci */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_slot"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("slot"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("          "),(0,e._)("span",{class:"token comment"},"/* Physical slot this device is in */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    devfn"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("          "),(0,e._)("span",{class:"token comment"},"/* Encoded device & function index */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"short"),(0,e.Uk)("  vendor"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"short"),(0,e.Uk)("  device"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"short"),(0,e.Uk)("  subsystem_vendor"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"short"),(0,e.Uk)("  subsystem_device"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    class"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("          "),(0,e._)("span",{class:"token comment"},"/* 3 bytes: (base,sub,prog-if) */"),(0,e.Uk)("\n        u8              revision"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* PCI revision, low byte of class word */"),(0,e.Uk)("\n        u8              hdr_type"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* PCI header type (`multi' flag masked out) */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"ifdef"),(0,e.Uk)(),(0,e._)("span",{class:"token expression"},"CONFIG_PCIEAER")]),(0,e.Uk)("\n        u16             aer_cap"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("        "),(0,e._)("span",{class:"token comment"},"/* AER capability offset */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"aer_stats"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("aer_stats"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("    "),(0,e._)("span",{class:"token comment"},"/* AER stats for this device */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"endif")]),(0,e.Uk)("\n        u8              pcie_cap"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* PCIe capability offset */"),(0,e.Uk)("\n        u8              msi_cap"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("        "),(0,e._)("span",{class:"token comment"},"/* MSI capability offset */"),(0,e.Uk)("\n        u8              msix_cap"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* MSI-X capability offset */"),(0,e.Uk)("\n        u8              pcie_mpss"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"3"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("    "),(0,e._)("span",{class:"token comment"},"/* PCIe Max Payload Size Supported */"),(0,e.Uk)("\n        u8              rom_base_reg"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("   "),(0,e._)("span",{class:"token comment"},"/* Config register controlling ROM */"),(0,e.Uk)("\n        u8              pin"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("            "),(0,e._)("span",{class:"token comment"},"/* Interrupt pin this device uses */"),(0,e.Uk)("\n        u16             pcie_flags_reg"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* Cached PCIe Capabilities Register */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"long"),(0,e.Uk)("   "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dma_alias_mask"),(0,e._)("span",{class:"token punctuation"},";"),(0,e._)("span",{class:"token comment"},"/* Mask of enabled devfn aliases */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_driver"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("driver"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("      "),(0,e._)("span",{class:"token comment"},"/* Driver bound to this device */"),(0,e.Uk)("\n        u64             dma_mask"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* Mask of the bits of bus address this\n                                           device implements.  Normally this is\n                                           0xffffffff.  You only need to change\n                                           this if your device has broken DMA\n                                           or supports 64-bit transfers.  */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"device_dma_parameters"),(0,e.Uk)(" dma_parms"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token class-name"},"pci_power_t"),(0,e.Uk)("     current_state"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("  "),(0,e._)("span",{class:"token comment"},"/* Current operating state. In ACPI,\n                                           this is D0-D3, D0 being fully\n                                           functional, and D3 being off. */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    imm_ready"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("    "),(0,e._)("span",{class:"token comment"},"/* Supports Immediate Readiness */"),(0,e.Uk)("\n        u8              pm_cap"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* PM capability offset */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    pme_support"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"5"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("  "),(0,e._)("span",{class:"token comment"},"/* Bitmask of states from which PME#\n                                           can be generated */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    pme_poll"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("     "),(0,e._)("span",{class:"token comment"},"/* Poll device's PME status bit */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    d1_support"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("   "),(0,e._)("span",{class:"token comment"},"/* Low power state D1 is supported */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    d2_support"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("   "),(0,e._)("span",{class:"token comment"},"/* Low power state D2 is supported */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    no_d1d2"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("      "),(0,e._)("span",{class:"token comment"},"/* D1 and D2 are forbidden */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    no_d3cold"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("    "),(0,e._)("span",{class:"token comment"},"/* D3cold is forbidden */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    bridge_d3"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("    "),(0,e._)("span",{class:"token comment"},"/* Allow D3 for bridge */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    d3cold_allowed"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* D3cold is allowed by user */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    mmio_always_on"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* Disallow turning off io/mem\n                                                   decoding during BAR sizing */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    wakeup_prepared"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    runtime_d3cold"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* Whether go through runtime\n                                                   D3cold, not set for devices\n                                                   powered on/off by the\n                                                   corresponding bridge */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    ignore_hotplug"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* Ignore hotplug events */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    hotplug_user_indicators"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* SlotCtl indicators\n                                                      controlled exclusively by\n                                                      user sysfs */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    d3_delay"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* D3->D0 transition time in ms */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    d3cold_delay"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("   "),(0,e._)("span",{class:"token comment"},"/* D3cold->D0 transition time in ms */"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"ifdef"),(0,e.Uk)(),(0,e._)("span",{class:"token expression"},"CONFIG_PCIEASPM")]),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pcie_link_state"),(0,e.Uk)("  "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("link_state"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("    "),(0,e._)("span",{class:"token comment"},"/* ASPM link state */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    ltr_path"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("     "),(0,e._)("span",{class:"token comment"},"/* Latency Tolerance Reporting\n                                           supported from root to here */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"endif")]),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    eetlp_prefix_path"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("    "),(0,e._)("span",{class:"token comment"},"/* End-to-End TLP Prefix */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token class-name"},"pci_channel_state_t"),(0,e.Uk)(" error_state"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("        "),(0,e._)("span",{class:"token comment"},"/* Current connectivity state */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"device"),(0,e.Uk)("   dev"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("                    "),(0,e._)("span",{class:"token comment"},"/* Generic device interface */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("             cfg_size"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("               "),(0,e._)("span",{class:"token comment"},"/* Size of config space */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/*\n         * Instead of touching interrupt line and base address registers\n         * directly, use the values stored here. They might be different!\n         */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    irq"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"resource"),(0,e.Uk)(" resource"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("DEVICE_COUNT_RESOURCE"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* I/O and memory regions + expansion ROMs */"),(0,e.Uk)("\n\n        bool            match_driver"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("           "),(0,e._)("span",{class:"token comment"},"/* Skip attaching driver */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    transparent"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("          "),(0,e._)("span",{class:"token comment"},"/* Subtractive decode bridge */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    multifunction"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("        "),(0,e._)("span",{class:"token comment"},"/* Multi-function device */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    is_busmaster"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* Is busmaster */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    no_msi"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("               "),(0,e._)("span",{class:"token comment"},"/* May not use MSI */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    no_64bit_msi"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* May only use 32-bit MSIs */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    block_cfg_access"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("     "),(0,e._)("span",{class:"token comment"},"/* Config space access blocked */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    broken_parity_status"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* Generates false positive parity */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    irq_reroute_variant"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"2"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("  "),(0,e._)("span",{class:"token comment"},"/* Needs IRQ rerouting variant */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    msi_enabled"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    msix_enabled"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    ari_enabled"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("          "),(0,e._)("span",{class:"token comment"},"/* ARI forwarding */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    ats_enabled"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("          "),(0,e._)("span",{class:"token comment"},"/* Address Translation Svc */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    pasid_enabled"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("        "),(0,e._)("span",{class:"token comment"},"/* Process Address Space ID */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    pri_enabled"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("          "),(0,e._)("span",{class:"token comment"},"/* Page Request Interface */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    is_managed"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    needs_freset"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* Requires fundamental reset */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    state_saved"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    is_physfn"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    is_virtfn"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    reset_fn"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    is_hotplug_bridge"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    shpc_managed"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* SHPC owned by shpchp */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    is_thunderbolt"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* Thunderbolt controller */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token comment"},"/*\n         * Devices marked being untrusted are the ones that can potentially\n         * execute DMA attacks and similar. They are typically connected\n         * through external ports such as Thunderbolt but not limited to\n         * that. When an IOMMU is enabled they should be getting full\n         * mappings to make sure they cannot access arbitrary memory.\n         */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    untrusted"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    __aer_firmware_first_valid"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    __aer_firmware_first"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    broken_intx_masking"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("  "),(0,e._)("span",{class:"token comment"},"/* INTx masking can't be used */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    io_window_1k"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* Intel bridge 1K I/O windows */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    irq_managed"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    has_secondary_link"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    non_compliant_bars"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("   "),(0,e._)("span",{class:"token comment"},"/* Broken BARs; ignore them */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    is_probed"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("            "),(0,e._)("span",{class:"token comment"},"/* Device probing in progress */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    link_active_reporting"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e._)("span",{class:"token comment"},"/* Device capable of reporting link active */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    no_vf_scan"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("           "),(0,e._)("span",{class:"token comment"},"/* Don't scan for VFs after IOV enablement */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token class-name"},"pci_dev_flags_t"),(0,e.Uk)(" dev_flags"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token class-name"},"atomic_t"),(0,e.Uk)("        enable_cnt"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("     "),(0,e._)("span",{class:"token comment"},"/* pci_enable_device has been called */"),(0,e.Uk)("\n\n        u32             saved_config_space"),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token number"},"16"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* Config space saved at suspend time */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"hlist_head"),(0,e.Uk)(" saved_cap_space"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"bin_attribute"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("rom_attr"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* Attribute descriptor for sysfs ROM entry */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("             rom_attr_enabled"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("       "),(0,e._)("span",{class:"token comment"},"/* Display of ROM attribute enabled? */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"bin_attribute"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("res_attr"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("DEVICE_COUNT_RESOURCE"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* sysfs file for resources */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"bin_attribute"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("res_attr_wc"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("DEVICE_COUNT_RESOURCE"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* sysfs file for WC mapping of resources */"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"ifdef"),(0,e.Uk)(),(0,e._)("span",{class:"token expression"},"CONFIG_HOTPLUG_PCI_PCIE")]),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    broken_cmd_compl"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("     "),(0,e._)("span",{class:"token comment"},"/* No compl for some cmds */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"endif")]),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"ifdef"),(0,e.Uk)(),(0,e._)("span",{class:"token expression"},"CONFIG_PCIE_PTM")]),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    ptm_root"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("    ptm_enabled"),(0,e._)("span",{class:"token operator"},":"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        u8              ptm_granularity"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"endif")]),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"ifdef"),(0,e.Uk)(),(0,e._)("span",{class:"token expression"},"CONFIG_PCI_MSI")]),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"attribute_group"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("msi_irq_groups"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"endif")]),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_vpd"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("vpd"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"ifdef"),(0,e.Uk)(),(0,e._)("span",{class:"token expression"},"CONFIG_PCI_ATS")]),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"union"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_sriov"),(0,e.Uk)("        "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("sriov"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* PF: SR-IOV info */"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)("          "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("physfn"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("        "),(0,e._)("span",{class:"token comment"},"/* VF: related PF */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        u16             ats_cap"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("        "),(0,e._)("span",{class:"token comment"},"/* ATS Capability offset */"),(0,e.Uk)("\n        u8              ats_stu"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("        "),(0,e._)("span",{class:"token comment"},"/* ATS Smallest Translation Unit */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token class-name"},"atomic_t"),(0,e.Uk)("        ats_ref_cnt"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("    "),(0,e._)("span",{class:"token comment"},"/* Number of VFs with ATS enabled */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"endif")]),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"ifdef"),(0,e.Uk)(),(0,e._)("span",{class:"token expression"},"CONFIG_PCI_PRI")]),(0,e.Uk)("\n        u32             pri_reqs_alloc"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* Number of PRI requests allocated */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"endif")]),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"ifdef"),(0,e.Uk)(),(0,e._)("span",{class:"token expression"},"CONFIG_PCI_PASID")]),(0,e.Uk)("\n        u16             pasid_features"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"endif")]),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"ifdef"),(0,e.Uk)(),(0,e._)("span",{class:"token expression"},"CONFIG_PCI_P2PDMA")]),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_p2pdma"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("p2pdma"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token macro property"},[(0,e._)("span",{class:"token directive-hash"},"#"),(0,e._)("span",{class:"token directive keyword"},"endif")]),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token class-name"},"phys_addr_t"),(0,e.Uk)("     rom"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("            "),(0,e._)("span",{class:"token comment"},"/* Physical address if not from BAR */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token class-name"},"size_t"),(0,e.Uk)("          romlen"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* Length if not from BAR */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"char"),(0,e.Uk)("            "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("driver_override"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* Driver name to force a match */"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"long"),(0,e.Uk)("   priv_flags"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("     "),(0,e._)("span",{class:"token comment"},"/* Private flags for the PCI driver */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"34"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"35"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"36"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"37"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"38"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"39"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"40"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"41"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"42"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"43"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"44"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"45"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"46"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"47"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"48"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"49"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"50"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"51"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"52"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"53"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"54"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"55"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"56"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"57"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"58"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"59"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"60"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"61"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"62"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"63"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"64"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"65"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"66"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"67"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"68"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"69"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"70"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"71"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"72"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"73"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"74"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"75"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"76"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"77"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"78"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"79"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"80"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"81"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"82"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"83"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"84"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"85"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"86"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"87"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"88"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"89"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"90"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"91"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"92"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"93"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"94"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"95"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"96"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"97"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"98"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"99"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"100"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"101"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"102"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"103"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"104"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"105"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"106"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"107"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"108"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"109"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"110"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"111"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"112"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"113"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"114"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"115"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"116"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"117"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"118"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"119"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"120"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"121"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"122"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"123"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"124"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"125"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"126"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"127"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"128"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"129"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"130"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"131"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"132"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"133"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"134"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"135"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"136"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"137"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"138"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"139"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"140"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"141"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"142"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"143"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"144"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"145"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"146"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"147"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"148"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"149"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"150"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"151"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"152"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"153"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"154"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"155"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"156"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"157"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"158"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"159"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"160"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"161"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"162"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"163"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"164"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"165"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"166"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"167"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"168"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"169"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"170"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"171"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"172"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"173"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"174"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"175"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"176"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"177"),(0,e._)("br")])],-1),Qn=(0,e._)("h2",{id:"pci-structure-from-qemu-view",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#pci-structure-from-qemu-view","aria-hidden":"true"},"#"),(0,e.Uk)(" PCI Structure from QEMU view")],-1),jn=(0,e._)("p",null,"Let's create a VM and see its topology.",-1),Yn=(0,e._)("div",{class:"language-bash ext-sh line-numbers-mode"},[(0,e._)("pre",{class:"language-bash"},[(0,e._)("code",null,[(0,e.Uk)("qemu-system-aarch64 "),(0,e._)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n\t-machine virt-2.12,accel"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("kvm,usb"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("off,dump-guest-core"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("off,gic-version"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("host "),(0,e._)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n\t-device pcie-root-port,port"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0x8,chassis"),(0,e._)("span",{class:"token operator"},"="),(0,e._)("span",{class:"token number"},"1"),(0,e.Uk)(",id"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pci.1,bus"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pcie.0,multifunction"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("on,addr"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0x1 "),(0,e._)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n\t-device pcie-root-port,port"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0x9,chassis"),(0,e._)("span",{class:"token operator"},"="),(0,e._)("span",{class:"token number"},"2"),(0,e.Uk)(",id"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pci.2,bus"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pcie.0,addr"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0x1.0x1 "),(0,e._)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n\t-device pcie-root-port,port"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0xa,chassis"),(0,e._)("span",{class:"token operator"},"="),(0,e._)("span",{class:"token number"},"3"),(0,e.Uk)(",id"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pci.3,bus"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pcie.0,addr"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0x1.0x2 "),(0,e._)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n\t-device pcie-root-port,port"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0xb,chassis"),(0,e._)("span",{class:"token operator"},"="),(0,e._)("span",{class:"token number"},"4"),(0,e.Uk)(",id"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pci.4,bus"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pcie.0,addr"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0x1.0x3 "),(0,e._)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n\t-device pcie-root-port,port"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0xc,chassis"),(0,e._)("span",{class:"token operator"},"="),(0,e._)("span",{class:"token number"},"5"),(0,e.Uk)(",id"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pci.5,bus"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pcie.0,addr"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0x1.0x4 "),(0,e._)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n\t-device virtio-scsi-pci,id"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("scsi0,bus"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pci.3,addr"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0x0 "),(0,e._)("span",{class:"token punctuation"},"\\"),(0,e.Uk)("\n\t-device vfio-pci,host"),(0,e._)("span",{class:"token operator"},"="),(0,e._)("span",{class:"token number"},"82"),(0,e.Uk)(":00.0,id"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("hostdev0,bus"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("pci.5,addr"),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)("0x0\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br")])],-1),Zn=(0,e._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,e._)("pre",{class:"language-text"},[(0,e._)("code",null,"$ lshw\n\nmachine\n    description: Computer\n    width: 64 bits\n    capabilities: cp15_barrier setend swp tagged_addr_disabled\n  *-core\n       description: Motherboard\n       physical id: 0\n     *-memory\n          description: System memory\n          physical id: 0\n          size: 4GiB\n     *-cpu\n          physical id: 1\n          bus info: cpu@0\n          capabilities: fp asimd evtstrm aes pmull sha1 sha2 crc32 atomics fphp asimdhp cpuid asimdrdm jscvt fcma dcpop asimddp asimdfhm\n     *-pci\n          description: Host bridge\n          product: QEMU PCIe Host bridge\n          vendor: Red Hat, Inc.\n          physical id: 100\n          bus info: pci@0000:00:00.0\n          version: 00\n          width: 32 bits\n          clock: 33MHz\n        *-pci:0\n             description: PCI bridge\n             product: QEMU PCIe Root port\n             vendor: Red Hat, Inc.\n             physical id: 1\n             bus info: pci@0000:00:01.0\n             version: 00\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pci normal_decode bus_master cap_list\n             configuration: driver=pcieport\n             resources: irq:38 memory:10a00000-10a00fff ioport:1000(size=4096) memory:10000000-101fffff ioport:8000000000(size=2097152)\n        *-pci:1\n             description: PCI bridge\n             product: QEMU PCIe Root port\n             vendor: Red Hat, Inc.\n             physical id: 1.1\n             bus info: pci@0000:00:01.1\n             version: 00\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pci normal_decode bus_master cap_list\n             configuration: driver=pcieport\n             resources: irq:38 memory:10a01000-10a01fff ioport:2000(size=4096) memory:10200000-103fffff ioport:8000200000(size=2097152)\n        *-pci:2\n             description: PCI bridge\n             product: QEMU PCIe Root port\n             vendor: Red Hat, Inc.\n             physical id: 1.2\n             bus info: pci@0000:00:01.2\n             version: 00\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pci normal_decode bus_master cap_list\n             configuration: driver=pcieport\n             resources: irq:38 memory:10a02000-10a02fff ioport:3000(size=4096) memory:10400000-105fffff ioport:8000400000(size=2097152)\n           *-scsi\n                description: SCSI storage controller\n                product: Virtio SCSI\n                vendor: Red Hat, Inc.\n                physical id: 0\n                bus info: pci@0000:03:00.0\n                version: 01\n                width: 64 bits\n                clock: 33MHz\n                capabilities: scsi bus_master cap_list\n                configuration: driver=virtio-pci latency=0\n                resources: iomemory:800-7ff irq:38 memory:10400000-10400fff memory:8000400000-8000403fff\n              *-virtio0 UNCLAIMED\n                   description: Virtual I/O device\n                   physical id: 0\n                   bus info: virtio@0\n                   configuration: driver=virtio_scsi\n        *-pci:3\n             description: PCI bridge\n             product: QEMU PCIe Root port\n             vendor: Red Hat, Inc.\n             physical id: 1.3\n             bus info: pci@0000:00:01.3\n             version: 00\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pci normal_decode bus_master cap_list\n             configuration: driver=pcieport\n             resources: irq:38 memory:10a03000-10a03fff ioport:4000(size=4096) memory:10600000-107fffff ioport:8000600000(size=2097152)\n        *-pci:4\n             description: PCI bridge\n             product: QEMU PCIe Root port\n             vendor: Red Hat, Inc.\n             physical id: 1.4\n             bus info: pci@0000:00:01.4\n             version: 00\n             width: 32 bits\n             clock: 33MHz\n             capabilities: pci normal_decode bus_master cap_list\n             configuration: driver=pcieport\n             resources: irq:38 memory:10a04000-10a04fff ioport:5000(size=4096) memory:10800000-109fffff ioport:8000800000(size=2097152)\n           *-storage\n                description: Non-Volatile memory controller\n                product: NVMe SSD Controller SM981/PM981/PM983\n                vendor: Samsung Electronics Co Ltd\n                physical id: 0\n                bus info: pci@0000:05:00.0\n                version: 00\n                width: 64 bits\n                clock: 33MHz\n                capabilities: storage nvm_express bus_master cap_list rom\n                configuration: driver=nvme latency=0\n                resources: irq:38 memory:10810000-10813fff memory:10800000-1080ffff\n              *-nvme0\n                   description: NVMe device\n                   product: SAMSUNG MZQLB1T9HAJR-00003\n                   physical id: 0\n                   logical name: /dev/nvme0\n                   version: EDA5700Q\n                   serial: S480NE0MB00360\n                   configuration: nqn=nqn.2014.08.org.nvmexpress:144d144dS480NE0MB00360      SAMSUNG MZQLB1T9HAJR-00003 state=live\n                 *-namespace\n                      description: NVMe namespace\n                      physical id: 1\n                      logical name: /dev/nvme0n1\n")]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"34"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"35"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"36"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"37"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"38"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"39"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"40"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"41"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"42"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"43"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"44"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"45"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"46"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"47"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"48"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"49"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"50"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"51"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"52"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"53"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"54"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"55"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"56"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"57"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"58"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"59"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"60"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"61"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"62"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"63"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"64"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"65"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"66"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"67"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"68"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"69"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"70"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"71"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"72"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"73"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"74"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"75"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"76"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"77"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"78"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"79"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"80"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"81"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"82"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"83"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"84"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"85"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"86"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"87"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"88"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"89"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"90"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"91"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"92"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"93"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"94"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"95"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"96"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"97"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"98"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"99"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"100"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"101"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"102"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"103"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"104"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"105"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"106"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"107"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"108"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"109"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"110"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"111"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"112"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"113"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"114"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"115"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"116"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"117"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"118"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"119"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"120"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"121"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"122"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"123"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"124"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"125"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"126"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"127"),(0,e._)("br")])],-1),Jn=(0,e._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,e._)("pre",{class:"language-text"},[(0,e._)("code",null,"        +-----------------------------------------------------------------+\n        |                   PCI Host bridge                               |\n        +-----------------------------------------------------------------+\n            ^             ^              ^              ^             ^\n            |             |              |              |             |\n            V             V              V              V             V\n    +---------------------------------------------------------------------------+\n    |                               Bus                                         |\n    +---------------------------------------------------------------------------+\n            ^             ^              ^              ^             ^\n            |             |              |              |             |\n            V             V              V              V             V\n      +-----------+ +-----------+  +-----------+  +-----------+  +-----------+\n      | root port | | root port |  | root port |  | root port |  | root port |\n      |   pci.0   | |   pci.1   |  |   pci.2   |  |   pci.3   |  |   pci.4   |\n      +-----------+ +-----------+  +-----------+  +-----------+  +-----------+\n                                                                       ^\n                                                                       |\n                                                                       V\n                                                                 +-----------+\n                                                                 |  Bus      |\n                                                                 +-----------+\n                                                                       ^\n                                                                       |\n                                                                       V\n                                                                 +-----------+\n                                                                 |  storage  |\n                                                                 +-----------+\n")]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br")])],-1),Kn=(0,e._)("h2",{id:"msi",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#msi","aria-hidden":"true"},"#"),(0,e.Uk)(" MSI")],-1),$n=(0,e._)("h3",{id:"introduction",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#introduction","aria-hidden":"true"},"#"),(0,e.Uk)(" Introduction")],-1),ns=(0,e._)("p",null,"A Message Signaled Interrupt is a write from the device to a special address which causes an interrupt to be received by the CPU.",-1),ss=(0,e._)("p",null,"The MSI capability was first specified in PCI 2.2 and was later enhanced in PCI 3.0 to allow each interrupt to be masked individually. The MSI-X capability was also introduced with PCI 3.0. It supports more interrupts per device than MSI and allows interrupts to be independently configured.",-1),as=(0,e._)("p",null,[(0,e.Uk)("Devices may support both MSI and MSI-X, "),(0,e._)("strong",null,"but only one can be enabled at a time.")],-1),es=(0,e._)("h3",{id:"msi-and-msix",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#msi-and-msix","aria-hidden":"true"},"#"),(0,e.Uk)(" MSI and MSIX")],-1),ts=(0,e._)("p",null,'MSI and MSI-X are PCI capabilities. Both are "Message Signaled Interrupts" which deliver interrupts to the CPU via a DMA write to a Local APIC. The fundamental difference between MSI and MSI-X is how multiple "vectors" get allocated. MSI requires contiguous blocks of vectors while MSI-X can allocate several individual ones.',-1),os=(0,e._)("p",null,[(0,e.Uk)("MSI capability can be enabled by calling "),(0,e._)("code",null,"pci_alloc_irq_vectors()"),(0,e.Uk)(" with the "),(0,e._)("code",null,"PCI_IRQ_MSI"),(0,e.Uk)(" and/or "),(0,e._)("code",null,"PCI_IRQ_MSIX"),(0,e.Uk)(" flags before calling request_irq(). This causes the PCI support to program CPU vector data into the PCI device capability registers.")],-1),cs=(0,e._)("p",null,"Advantages:",-1),ls=(0,e._)("ul",null,[(0,e._)("li",null,"MSI is an exclusive interrupt vector by definition. This means the interrupt handler doesn't have to verify its device caused the interrupt."),(0,e._)("li",null,"MSI avoids DMA/IRQ race conditions. DMA to host memory is guaranteed to be visible to the host CPU(s) when the MSI is delivered. This is important for both data conherency and avoiding state control data. This guarantee allows the driver to omit MMIO reads to flush the DMA stream."),(0,e._)("li",null,"PCI devices can only support a single pin-based interrupt per function. Often drivers have to query the devices to find out what event has occurred, slowing down interrupt handling for the common case.")],-1),rs=(0,e._)("h3",{id:"how-to-use-msis",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#how-to-use-msis","aria-hidden":"true"},"#"),(0,e.Uk)(" How to use MSIs")],-1),_s=(0,e._)("p",null,"The driver simply has to request that the PCI layer set up the MSI capability for this device.",-1),ps=(0,e._)("p",null,"To automatically use MSI or MSI-X interrupt vectors, use the following function:",-1),is=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"pci_alloc_irq_vectors"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" min_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n              "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" max_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" flags"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br")])],-1),ks=(0,e._)("p",null,"which allocates up to max_vecs interrupt vectors for a PCI device. It returns the number of vectors allocated or a negative error. If the device has a requirements for a minimum number of vectors the driver can pass a min_vecs argument set to this limit, and the PCI core will return -ENOSPC if it can’t meet the minimum number of vectors.",-1),us=(0,e._)("p",null,[(0,e.Uk)("To get the Linux IRQ number passed to "),(0,e._)("code",null,"request_irq()"),(0,e.Uk)(" and "),(0,e._)("code",null,"free_irq()"),(0,e.Uk)(" and the vectors, use the following function:")],-1),bs=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"pci_irq_vector"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" nr"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br")])],-1),ms=(0,e._)("h3",{id:"implementation",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#implementation","aria-hidden":"true"},"#"),(0,e.Uk)(" Implementation")],-1),ds=(0,e._)("h4",{id:"pci-alloc-irq-vectors",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#pci-alloc-irq-vectors","aria-hidden":"true"},"#"),(0,e.Uk)(" pci_alloc_irq_vectors")],-1),Us=(0,e._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,e._)("pre",{class:"language-text"},[(0,e._)("code",null,"pci_alloc_irq_vectors\n  - pci_alloc_irq_vectors_affinity\n    - __pci_enable_msix_range (for msix)\n      - msix_capability_init\n        - pci_msi_setup_msi_irqs -----------------------------------------+\n    - __pci_enable_msi_range (for msi)                                    |\n      - msi_capability_init: configure device's MSI capability structure  |\n        - msi_setup_entry                                                 |\n          - pci_msi_setup_msi_irqs ---------------------------------------+\n    - pci_intx (for legacy)                                               |\n                                                                          |\npci_msi_setup_msi_irqs <--------------------------------------------------+\n  - msi_domain_alloc_irqs\n    - msi_domain_prepare_irqs\n      - its_msi_prepare\n    - __irq_domain_alloc_irqs\n")]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br")])],-1),fs=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"static"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"inline"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token function"},"pci_alloc_irq_vectors"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" min_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                      "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" max_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" flags"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"pci_alloc_irq_vectors_affinity"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" min_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" max_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" flags"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                              "),(0,e._)("span",{class:"token constant"},"NULL"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br")])],-1),ys=(0,e._)("p",null,[(0,e._)("code",null,"pci_alloc_irq_vectors_affinity"),(0,e.Uk)(" dispatches either of "),(0,e._)("strong",null,"MSI"),(0,e.Uk)(", "),(0,e._)("strong",null,"MSIX"),(0,e.Uk)(" or "),(0,e._)("strong",null,"LEGACY"),(0,e.Uk)(".")],-1),hs=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"/**\n * pci_alloc_irq_vectors_affinity - allocate multiple IRQs for a device\n * @dev:                PCI device to operate on\n * @min_vecs:           minimum number of vectors required (must be >= 1)\n * @max_vecs:           maximum (desired) number of vectors\n * @flags:              flags or quirks for the allocation\n * @affd:               optional description of the affinity requirements\n *\n * Allocate up to @max_vecs interrupt vectors for @dev, using MSI-X or MSI\n * vectors if available, and fall back to a single legacy vector\n * if neither is available.  Return the number of vectors allocated,\n * (which might be smaller than @max_vecs) if successful, or a negative\n * error code on error. If less than @min_vecs interrupt vectors are\n * available for @dev the function will fail with -ENOSPC.\n *\n * To get the Linux IRQ number used for a vector that can be passed to\n * request_irq() use the pci_irq_vector() helper.\n */"),(0,e.Uk)("\n "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"pci_alloc_irq_vectors_affinity"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" min_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                   "),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" max_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" flags"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                   "),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_affinity"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"static"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_affinity"),(0,e.Uk)(" msi_default_affd"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" msix_vecs "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("ENOSPC"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" msi_vecs "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("ENOSPC"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("flags "),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)(" PCI_IRQ_AFFINITY"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"!"),(0,e.Uk)("affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        affd "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("msi_default_affd"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"else"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token function"},"WARN_ON"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        affd "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token constant"},"NULL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("flags "),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)(" PCI_IRQ_MSIX"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                msix_vecs "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"__pci_enable_msix_range"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token constant"},"NULL"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" min_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                                    max_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("msix_vecs "),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" msix_vecs"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("flags "),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)(" PCI_IRQ_MSI"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                msi_vecs "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"__pci_enable_msi_range"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" min_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" max_vecs"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                                  affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("msi_vecs "),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" msi_vecs"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/* use legacy irq if allowed */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("flags "),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)(" PCI_IRQ_LEGACY"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("min_vecs "),(0,e._)("span",{class:"token operator"},"=="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"&&"),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("irq"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token function"},"pci_intx"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("msix_vecs "),(0,e._)("span",{class:"token operator"},"=="),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("ENOSPC"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("ENOSPC"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" msi_vecs"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"34"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"35"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"36"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"37"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"38"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"39"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"40"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"41"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"42"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"43"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"44"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"45"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"46"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"47"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"48"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"49"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"50"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"51"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"52"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"53"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"54"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"55"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"56"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"57"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"58"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"59"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"60"),(0,e._)("br")])],-1),vs=(0,e._)("h4",{id:"enable-msi-x",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#enable-msi-x","aria-hidden":"true"},"#"),(0,e.Uk)(" Enable MSI-X")],-1),ws=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"static"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"__pci_enable_msix_range"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                   "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msix_entry"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("entries"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" minvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                   "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" maxvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_affinity"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" rc"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" nvec "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" maxvec"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("maxvec "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(" minvec"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("ERANGE"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/*\n         * If the caller is passing in sets, we can't support a range of\n         * supported vectors. The caller needs to handle that.\n         */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("affd "),(0,e._)("span",{class:"token operator"},"&&"),(0,e.Uk)(" affd"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("nr_sets "),(0,e._)("span",{class:"token operator"},"&&"),(0,e.Uk)(" minvec "),(0,e._)("span",{class:"token operator"},"!="),(0,e.Uk)(" maxvec"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("EINVAL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token function"},"WARN_ON_ONCE"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msix_enabled"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("EINVAL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"for"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},";"),(0,e._)("span",{class:"token punctuation"},";"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                        nvec "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"irq_calc_affinity_vectors"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("minvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("nvec "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(" minvec"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("ENOSPC"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n                rc "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"__pci_enable_msix"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" entries"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("rc "),(0,e._)("span",{class:"token operator"},"=="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("rc "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" rc"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("rc "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(" minvec"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("ENOSPC"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n                nvec "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" rc"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"34"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"35"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"36"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"37"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"38"),(0,e._)("br")])],-1),gs=(0,e._)("p",null,"Let's skip irq affinity here.",-1),Is=(0,e._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,e._)("pre",{class:"language-text"},[(0,e._)("code",null,"__pci_enable_msix\n  - pci_msi_supported\n  - pci_msix_vec_count\n  - msix_capability_init\n")]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br")])],-1),xs=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"static"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"__pci_enable_msix"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msix_entry"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("entries"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                             "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_affinity"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" nr_entries"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" i"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" j"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"!"),(0,e._)("span",{class:"token function"},"pci_msi_supported"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("EINVAL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        nr_entries "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"pci_msix_vec_count"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("nr_entries "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" nr_entries"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("nvec "),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)(" nr_entries"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" nr_entries"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("entries"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token comment"},"/* Check for any invalid entries */"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"for"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("i "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(" i "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(" i"),(0,e._)("span",{class:"token operator"},"++"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("entries"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("i"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("entry "),(0,e._)("span",{class:"token operator"},">="),(0,e.Uk)(" nr_entries"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("EINVAL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("         "),(0,e._)("span",{class:"token comment"},"/* invalid entry */"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"for"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("j "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" i "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(" j "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(" j"),(0,e._)("span",{class:"token operator"},"++"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("entries"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("i"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("entry "),(0,e._)("span",{class:"token operator"},"=="),(0,e.Uk)(" entries"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("j"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("entry"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                                        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("EINVAL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"/* duplicate entry */"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/* Check whether driver already requested for MSI irq */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msi_enabled"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token function"},"pci_info"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"can\'t enable MSI-X (MSI IRQ already assigned)\\n"'),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("EINVAL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msix_capability_init"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" entries"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"34"),(0,e._)("br")])],-1),Ms=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"/**\n * pci_msi_supported - check whether MSI may be enabled on a device\n * @dev: pointer to the pci_dev data structure of MSI device function\n * @nvec: how many MSIs have been requested ?\n *\n * Look at global flags, the device itself, and its parent buses\n * to determine if MSI/-X are supported for the device. If MSI/-X is\n * supported return 1, else return 0.\n **/"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"static"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"pci_msi_supported"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_bus"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("bus"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/* MSI must be globally enabled and supported by the device */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"!"),(0,e.Uk)("pci_msi_enable"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"!"),(0,e.Uk)("dev "),(0,e._)("span",{class:"token operator"},"||"),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("no_msi "),(0,e._)("span",{class:"token operator"},"||"),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("current_state "),(0,e._)("span",{class:"token operator"},"!="),(0,e.Uk)(" PCI_D0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/*\n         * You can't ask to have 0 or less MSIs configured.\n         *  a) it's stupid ..\n         *  b) the list manipulation code assumes nvec >= 1.\n         */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("nvec "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/*\n         * Any bridge which does NOT route MSI transactions from its\n         * secondary bus to its primary bus must set NO_MSI flag on\n         * the secondary pci_bus.\n         * We expect only arch-specific PCI host bus controller driver\n         * or quirks for specific PCI bridges to be setting NO_MSI.\n         */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"for"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("bus "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("bus"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(" bus"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(" bus "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" bus"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("parent"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("bus"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("bus_flags "),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)(" PCI_BUS_FLAGS_NO_MSI"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"34"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"35"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"36"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"37"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"38"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"39"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"40"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"41"),(0,e._)("br")])],-1),Ss=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"/**\n * pci_msix_vec_count - return the number of device's MSI-X table entries\n * @dev: pointer to the pci_dev data structure of MSI-X device function\n * This function returns the number of device's MSI-X table entries and\n * therefore the number of MSI-X vectors device is capable of sending.\n * It returns a negative errno if the device is not capable of sending MSI-X\n * interrupts.\n **/"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"pci_msix_vec_count"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        u16 control"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"!"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msix_cap"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("EINVAL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token function"},"pci_read_config_word"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msix_cap "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(" PCI_MSIX_FLAGS"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("control"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msix_table_size"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("control"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token function"},"EXPORT_SYMBOL"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("pci_msix_vec_count"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br")])],-1),Cs=(0,e._)("div",{class:"language-text ext-text line-numbers-mode"},[(0,e._)("pre",{class:"language-text"},[(0,e._)("code",null,"msix_capability_init\n  - pci_msix_clear_and_set_ctrl: disable msi-x enable bit\n  - msix_map_region: compute the physical addres of msi-x table and map it\n                     to virtual address\n  - msix_setup_entries: allocate and initialize msi_desc for each vector\n  - pci_msi_setup_msi_irqs\n  - msi_verify_entries\n")]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br")])],-1),Ps=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"/**\n * msix_capability_init - configure device's MSI-X capability\n * @dev: pointer to the pci_dev data structure of MSI-X device function\n * @entries: pointer to an array of struct msix_entry entries\n * @nvec: number of @entries\n * @affd: Optional pointer to enable automatic affinity assignement\n *\n * Setup the MSI-X capability structure of device function with a\n * single MSI-X irq. A return of zero indicates the successful setup of\n * requested MSI-X entries with allocated irqs or non-zero for otherwise.\n **/"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"static"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msix_capability_init"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msix_entry"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("entries"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_affinity"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" ret"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        u16 control"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"void"),(0,e.Uk)(" __iomem "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("base"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/* Ensure MSI-X is disabled while it is set up */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token function"},"pci_msix_clear_and_set_ctrl"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" PCI_MSIX_FLAGS_ENABLE"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token function"},"pci_read_config_word"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msix_cap "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(" PCI_MSIX_FLAGS"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("control"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token comment"},"/* Request & Map MSI-X table region */"),(0,e.Uk)("\n\t"),(0,e._)("span",{class:"token comment"},"/* base is the virtual address of msi-x table */"),(0,e.Uk)("\n        base "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msix_map_region"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msix_table_size"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("control"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"!"),(0,e.Uk)("base"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("ENOMEM"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        ret "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msix_setup_entries"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" base"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" entries"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("ret"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" ret"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        ret "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"pci_msi_setup_msi_irqs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" PCI_CAP_ID_MSIX"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("ret"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"goto"),(0,e.Uk)(" out_avail"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/* Check if all MSI entries honor device restrictions */"),(0,e.Uk)("\n        ret "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msi_verify_entries"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("ret"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"goto"),(0,e.Uk)(" out_free"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/*\n         * Some devices require MSI-X to be enabled before we can touch the\n         * MSI-X registers.  We need to mask all the vectors to prevent\n         * interrupts coming in before they're fully set up.\n         */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token function"},"pci_msix_clear_and_set_ctrl"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                PCI_MSIX_FLAGS_MASKALL "),(0,e._)("span",{class:"token operator"},"|"),(0,e.Uk)(" PCI_MSIX_FLAGS_ENABLE"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token function"},"msix_program_entries"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" entries"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        ret "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"populate_msi_sysfs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("ret"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"goto"),(0,e.Uk)(" out_free"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/* Set MSI-X enabled bits and unmask the function */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token function"},"pci_intx_for_msi"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msix_enabled "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token function"},"pci_msix_clear_and_set_ctrl"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" PCI_MSIX_FLAGS_MASKALL"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token function"},"pcibios_free_irq"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\nout_avail"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("ret "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token comment"},"/*\n                 * If we had some success, report the number of irqs\n                 * we succeeded in setting up.\n                 */"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msi_desc"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("entry"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" avail "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n                "),(0,e._)("span",{class:"token function"},"for_each_pci_msi_entry"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("entry"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("entry"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("irq "),(0,e._)("span",{class:"token operator"},"!="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                                avail"),(0,e._)("span",{class:"token operator"},"++"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("avail "),(0,e._)("span",{class:"token operator"},"!="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        ret "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" avail"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\nout_free"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token function"},"free_msi_irqs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" ret"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token keyword"},"static"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msix_setup_entries"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"void"),(0,e.Uk)(" __iomem "),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("base"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                              "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msix_entry"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("entries"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                              "),(0,e._)("span",{class:"token keyword"},"const"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_affinity"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_affinity_desc"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("curmsk"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("masks "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token constant"},"NULL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msi_desc"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("entry"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" ret"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" i"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                masks "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"irq_create_affinity_masks"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" affd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"for"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("i "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" curmsk "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" masks"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(" i "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(" i"),(0,e._)("span",{class:"token operator"},"++"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                entry "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"alloc_msi_entry"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" curmsk"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"!"),(0,e.Uk)("entry"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"!"),(0,e.Uk)("i"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                                "),(0,e._)("span",{class:"token function"},"iounmap"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("base"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"else"),(0,e.Uk)("\n                                "),(0,e._)("span",{class:"token function"},"free_msi_irqs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token comment"},"/* No enough memory. Don't try again */"),(0,e.Uk)("\n                        ret "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("ENOMEM"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"goto"),(0,e.Uk)(" out"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n                entry"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msi_attrib"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("is_msix       "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                entry"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msi_attrib"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("is_64         "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("entries"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        entry"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msi_attrib"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("entry_nr "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" entries"),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("i"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("entry"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"else"),(0,e.Uk)("\n                        entry"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msi_attrib"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("entry_nr "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" i"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                entry"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msi_attrib"),(0,e._)("span",{class:"token punctuation"},"."),(0,e.Uk)("default_irq   "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("irq"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                entry"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("mask_base                "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" base"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n                "),(0,e._)("span",{class:"token function"},"list_add_tail"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("entry"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("list"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"dev_to_msi_list"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("masks"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        curmsk"),(0,e._)("span",{class:"token operator"},"++"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n        ret "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\nout"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token function"},"kfree"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("masks"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" ret"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"34"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"35"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"36"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"37"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"38"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"39"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"40"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"41"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"42"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"43"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"44"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"45"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"46"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"47"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"48"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"49"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"50"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"51"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"52"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"53"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"54"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"55"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"56"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"57"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"58"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"59"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"60"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"61"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"62"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"63"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"64"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"65"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"66"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"67"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"68"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"69"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"70"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"71"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"72"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"73"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"74"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"75"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"76"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"77"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"78"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"79"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"80"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"81"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"82"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"83"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"84"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"85"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"86"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"87"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"88"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"89"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"90"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"91"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"92"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"93"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"94"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"95"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"96"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"97"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"98"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"99"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"100"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"101"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"102"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"103"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"104"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"105"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"106"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"107"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"108"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"109"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"110"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"111"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"112"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"113"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"114"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"115"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"116"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"117"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"118"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"119"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"120"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"121"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"122"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"123"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"124"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"125"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"126"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"127"),(0,e._)("br")])],-1),qs=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"static"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"pci_msi_setup_msi_irqs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" type"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_domain"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        domain "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"dev_get_msi_domain"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("domain "),(0,e._)("span",{class:"token operator"},"&&"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"irq_domain_is_hierarchy"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msi_domain_alloc_irqs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"arch_setup_msi_irqs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" type"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br")])],-1),As=(0,e._)("p",null,[(0,e.Uk)("the function invokes "),(0,e._)("code",null,"msi_domain_alloc_irqs"),(0,e.Uk)(" which allocates Linux irqs from a MSI interrupt domain.")],-1),Es=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msi_domain_alloc_irqs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_domain"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"device"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                          "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msi_domain_info"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("info "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" domain"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("host_data"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msi_domain_ops"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("ops "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" info"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("ops"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_data"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("irq_data"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msi_desc"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("desc"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token class-name"},"msi_alloc_info_t"),(0,e.Uk)(" arg"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" i"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" ret"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" virq"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        bool can_reserve"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"// creates device and inserts into ITS device list"),(0,e.Uk)("\n        ret "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msi_domain_prepare_irqs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" nvec"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("arg"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("ret"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" ret"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token function"},"for_each_msi_entry"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("desc"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                ops"),(0,e._)("span",{class:"token operator"},"->"),(0,e._)("span",{class:"token function"},"set_desc"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("arg"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" desc"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n                "),(0,e._)("span",{class:"token comment"},"// allocates linux irq"),(0,e.Uk)("\n                virq "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"__irq_domain_alloc_irqs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" desc"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("nvec_used"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                               "),(0,e._)("span",{class:"token function"},"dev_to_node"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("arg"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" false"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                               desc"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("affinity"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("virq "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                        ret "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("ENOSPC"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("ops"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("handle_error"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                                ret "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" ops"),(0,e._)("span",{class:"token operator"},"->"),(0,e._)("span",{class:"token function"},"handle_error"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" desc"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" ret"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("ops"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msi_finish"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                                ops"),(0,e._)("span",{class:"token operator"},"->"),(0,e._)("span",{class:"token function"},"msi_finish"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("arg"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" ret"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" ret"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n                "),(0,e._)("span",{class:"token keyword"},"for"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("i "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(" i "),(0,e._)("span",{class:"token operator"},"<"),(0,e.Uk)(" desc"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("nvec_used"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)(" i"),(0,e._)("span",{class:"token operator"},"++"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n\t\t\t"),(0,e._)("span",{class:"token comment"},"// set MSI descriptor data for an irq offset"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token function"},"irq_set_msi_desc_off"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("virq"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" i"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" desc"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token function"},"irq_debugfs_copy_devname"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("virq "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(" i"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("ops"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msi_finish"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                ops"),(0,e._)("span",{class:"token operator"},"->"),(0,e._)("span",{class:"token function"},"msi_finish"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)("arg"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        can_reserve "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"msi_check_reservation_mode"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" info"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token function"},"for_each_msi_entry"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("desc"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                virq "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(" desc"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("irq"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("desc"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("nvec_used "),(0,e._)("span",{class:"token operator"},"=="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token function"},"dev_dbg"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"irq %d for MSI\\n"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" virq"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"else"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token function"},"dev_dbg"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token string"},'"irq [%d-%d] for MSI\\n"'),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n                                virq"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" virq "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(" desc"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("nvec_used "),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token comment"},"/*\n                 * This flag is set by the PCI layer as we need to activate\n                 * the MSI entries before the PCI layer enables MSI in the\n                 * card. Otherwise the card latches a random msi message.\n                 */"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"!"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("info"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("flags "),(0,e._)("span",{class:"token operator"},"&"),(0,e.Uk)(" MSI_FLAG_ACTIVATE_EARLY"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"continue"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n                irq_data "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"irq_domain_get_irq_data"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" desc"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("irq"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token operator"},"!"),(0,e.Uk)("can_reserve"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token function"},"irqd_clr_can_reserve"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("irq_data"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                ret "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"irq_domain_activate_irq"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("irq_data"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" can_reserve"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("ret"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"goto"),(0,e.Uk)(" cleanup"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token comment"},"/*\n         * If these interrupts use reservation mode, clear the activated bit\n         * so request_irq() will assign the final vector.\n         */"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("can_reserve"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token function"},"for_each_msi_entry"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("desc"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                        irq_data "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"irq_domain_get_irq_data"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" desc"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("irq"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token function"},"irqd_clr_activated"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("irq_data"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\ncleanup"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token function"},"for_each_msi_entry"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("desc"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"irq_data"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("irqd"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("desc"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("irq "),(0,e._)("span",{class:"token operator"},"=="),(0,e.Uk)(" virq"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"break"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n                irqd "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"irq_domain_get_irq_data"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" desc"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("irq"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token function"},"irqd_is_activated"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("irqd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token function"},"irq_domain_deactivate_irq"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("irqd"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token function"},"msi_domain_free_irqs"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("domain"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" ret"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"34"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"35"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"36"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"37"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"38"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"39"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"40"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"41"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"42"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"43"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"44"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"45"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"46"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"47"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"48"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"49"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"50"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"51"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"52"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"53"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"54"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"55"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"56"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"57"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"58"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"59"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"60"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"61"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"62"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"63"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"64"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"65"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"66"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"67"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"68"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"69"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"70"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"71"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"72"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"73"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"74"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"75"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"76"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"77"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"78"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"79"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"80"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"81"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"82"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"83"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"84"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"85"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"86"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"87"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"88"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"89"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"90"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"91"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"92"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"93"),(0,e._)("br")])],-1),Rs=(0,e._)("h4",{id:"pci-irq-vector",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#pci-irq-vector","aria-hidden":"true"},"#"),(0,e.Uk)(" pci_irq_vector")],-1),Ns=(0,e._)("div",{class:"language-c ext-c line-numbers-mode"},[(0,e._)("pre",{class:"language-c"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"/**\n * pci_irq_vector - return Linux IRQ number of a device vector\n * @dev: PCI device to operate on\n * @nr: device-relative interrupt vector index (0-based).\n */"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"pci_irq_vector"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"pci_dev"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"unsigned"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" nr"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msix_enabled"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msi_desc"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("entry"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"int"),(0,e.Uk)(" i "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n                "),(0,e._)("span",{class:"token function"},"for_each_pci_msi_entry"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("entry"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("i "),(0,e._)("span",{class:"token operator"},"=="),(0,e.Uk)(" nr"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" entry"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("irq"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                        i"),(0,e._)("span",{class:"token operator"},"++"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token function"},"WARN_ON_ONCE"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("EINVAL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("msi_enabled"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"struct"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"msi_desc"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"*"),(0,e.Uk)("entry "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"first_pci_msi_entry"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("dev"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token function"},"WARN_ON_ONCE"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("nr "),(0,e._)("span",{class:"token operator"},">="),(0,e.Uk)(" entry"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("nvec_used"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("EINVAL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"else"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n                "),(0,e._)("span",{class:"token keyword"},"if"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token function"},"WARN_ON_ONCE"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("nr "),(0,e._)("span",{class:"token operator"},">"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"0"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n                        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(),(0,e._)("span",{class:"token operator"},"-"),(0,e.Uk)("EINVAL"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n        "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n        "),(0,e._)("span",{class:"token keyword"},"return"),(0,e.Uk)(" dev"),(0,e._)("span",{class:"token operator"},"->"),(0,e.Uk)("irq "),(0,e._)("span",{class:"token operator"},"+"),(0,e.Uk)(" nr"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token function"},"EXPORT_SYMBOL"),(0,e._)("span",{class:"token punctuation"},"("),(0,e.Uk)("pci_irq_vector"),(0,e._)("span",{class:"token punctuation"},")"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers"},[(0,e._)("span",{class:"line-number"},"1"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"2"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"3"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"4"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"5"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"6"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"7"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"8"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"9"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"10"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"11"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"12"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"13"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"14"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"15"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"16"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"17"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"18"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"19"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"20"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"21"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"22"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"23"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"24"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"25"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"26"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"27"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"28"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"29"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"30"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"31"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"32"),(0,e._)("br"),(0,e._)("span",{class:"line-number"},"33"),(0,e._)("br")])],-1),Ts=(0,e._)("h2",{id:"reference",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#reference","aria-hidden":"true"},"#"),(0,e.Uk)(" Reference")],-1),Ds=(0,e._)("blockquote",null,[(0,e._)("p",null,"Documentation/PCI/pci.txt Documentation/PCI/MSI-HOWTO.txt https://docs.oracle.com/cd/E19683-01/806-5222/6je8fjvhe/index.html#hwovr-fig-23 https://en.wikipedia.org/wiki/PCI_configuration_space https://wiki.osdev.org/PCI")],-1),Bs={render:function(n,s){const a=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[o,(0,e._)("nav",c,[(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(a,{to:"#architecture"},{default:(0,e.w5)((()=>[l])),_:1}),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(a,{to:"#host-bridge"},{default:(0,e.w5)((()=>[r])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#pci-bus"},{default:(0,e.w5)((()=>[_])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#pci-device"},{default:(0,e.w5)((()=>[p])),_:1})])])]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#type-0-pci-configuration-space-non-bridge"},{default:(0,e.w5)((()=>[i])),_:1}),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(a,{to:"#standardized-registers"},{default:(0,e.w5)((()=>[k])),_:1})])])]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#type-1-pci-configuration-space"},{default:(0,e.w5)((()=>[u])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#msi-and-msi-x"},{default:(0,e.w5)((()=>[b])),_:1}),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(a,{to:"#msi-capability"},{default:(0,e.w5)((()=>[m])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#msi-x-table"},{default:(0,e.w5)((()=>[d])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#msi-x-capability"},{default:(0,e.w5)((()=>[U])),_:1})])])]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#linux"},{default:(0,e.w5)((()=>[f])),_:1}),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(a,{to:"#pci-bus-1"},{default:(0,e.w5)((()=>[y])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#msi-desc"},{default:(0,e.w5)((()=>[h])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#pci-device-1"},{default:(0,e.w5)((()=>[v])),_:1})])])]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#pci-structure-from-qemu-view"},{default:(0,e.w5)((()=>[w])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#msi"},{default:(0,e.w5)((()=>[g])),_:1}),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(a,{to:"#introduction"},{default:(0,e.w5)((()=>[I])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#msi-and-msix"},{default:(0,e.w5)((()=>[x])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#how-to-use-msis"},{default:(0,e.w5)((()=>[M])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#implementation"},{default:(0,e.w5)((()=>[S])),_:1})])])]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#reference"},{default:(0,e.w5)((()=>[C])),_:1})])])]),P,q,A,E,R,N,T,D,B,L,O,X,V,z,W,H,F,G,Q,j,Y,Z,J,K,$,nn,sn,an,en,tn,on,cn,ln,rn,_n,pn,kn,un,bn,mn,dn,Un,fn,yn,hn,vn,wn,gn,In,xn,Mn,Sn,Cn,Pn,qn,An,En,Rn,Nn,Tn,Dn,Bn,Ln,On,Xn,Vn,zn,Wn,Hn,Fn,Gn,Qn,jn,Yn,Zn,Jn,Kn,$n,ns,ss,as,es,ts,os,cs,ls,rs,_s,ps,is,ks,us,bs,ms,ds,Us,fs,ys,hs,vs,ws,gs,Is,xs,Ms,Ss,Cs,Ps,qs,As,Es,Rs,Ns,Ts,Ds],64)}}},4444:(n,s,a)=>{n.exports=a.p+"assets/img/Pci-config-space.6dee84cd.svg"}}]);