"use strict";(self.webpackChunknotebook=self.webpackChunknotebook||[]).push([[500],{6410:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-5829eae6",path:"/kernel/ipc/eventfd.html",title:"eventfd",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"signal",slug:"signal",children:[]}],filePathRelative:"kernel/ipc/eventfd.md",git:{updatedTime:162761523e4,contributors:[{name:"Zhang Junyu",email:"zhangjunyu.92@bytedance.com",commits:3}]}}},8522:(n,s,a)=>{a.r(s),a.d(s,{default:()=>t});const p=(0,a(6252).uE)('<h1 id="eventfd" tabindex="-1"><a class="header-anchor" href="#eventfd" aria-hidden="true">#</a> eventfd</h1><h2 id="signal" tabindex="-1"><a class="header-anchor" href="#signal" aria-hidden="true">#</a> signal</h2><div class="language-c ext-c line-numbers-mode"><pre class="language-c"><code>__u64 <span class="token function">eventfd_signal</span><span class="token punctuation">(</span><span class="token keyword">struct</span> <span class="token class-name">eventfd_ctx</span> <span class="token operator">*</span>ctx<span class="token punctuation">,</span> __u64 n<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n        <span class="token keyword">unsigned</span> <span class="token keyword">long</span> flags<span class="token punctuation">;</span>\n\n        <span class="token function">spin_lock_irqsave</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ctx<span class="token operator">-&gt;</span>wqh<span class="token punctuation">.</span>lock<span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span>ULLONG_MAX <span class="token operator">-</span> ctx<span class="token operator">-&gt;</span>count <span class="token operator">&lt;</span> n<span class="token punctuation">)</span>\n                n <span class="token operator">=</span> ULLONG_MAX <span class="token operator">-</span> ctx<span class="token operator">-&gt;</span>count<span class="token punctuation">;</span>\n        ctx<span class="token operator">-&gt;</span>count <span class="token operator">+=</span> n<span class="token punctuation">;</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">waitqueue_active</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ctx<span class="token operator">-&gt;</span>wqh<span class="token punctuation">)</span><span class="token punctuation">)</span>\n                <span class="token function">wake_up_locked_poll</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ctx<span class="token operator">-&gt;</span>wqh<span class="token punctuation">,</span> EPOLLIN<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">spin_unlock_irqrestore</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>ctx<span class="token operator">-&gt;</span>wqh<span class="token punctuation">.</span>lock<span class="token punctuation">,</span> flags<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> n<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div>',3),t={render:function(n,s){return p}}}}]);